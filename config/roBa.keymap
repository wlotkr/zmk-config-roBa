#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q             &kp W         &kp E         &kp R        &kp T                                            &kp Y            &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G       &kp ESCAPE              &kp ESCAPE   &kp H            &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B       &kp TAB                 &kp TAB      &kp N            &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 SPACE  &lt 2 INT4  &lt 1 INT_MUHENKAN      &lt 1 ENTER  &lt 2 BACKSPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_1 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9     &kp NUMBER_0
&kp F1        &kp F2        &kp F3        &mkp LCLK     &mkp RCLK     &trans      &trans  &trans        &trans          &kp UP_ARROW    &trans           &kp COLON
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans      &trans  &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp BACKSLASH
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH          &kp DOLLAR    &kp PERCENT                      &kp AMPERSAND  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&kp QUESTION     &kp LESS_THAN      &kp GREATER_THAN  &kp PLUS      &kp MINUS    &trans      &trans  &kp PIPE       &kp UNDERSCORE    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp CARET
&trans           &trans             &trans            &kp ASTERISK  &kp EQUAL    &trans      &trans  &kp AT_SIGN    &kp GRAVE         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans           &trans             &trans            &trans        &trans       &trans      &trans  &trans                                                                        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
